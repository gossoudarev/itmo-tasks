const f = function(x) {
  return x ** 3;
};

const executor = (x, y) => x(y); // x - функция обратного вызова (callback). Вызывается в результате работы другой функции
console.log(executor(f, 5));

// Иной вариант записи данной функции (без объявления функции f)
console.log(executor(x => x ** 3, 5)); // 125
/* Результат функции выше известен сразу. Такие функции называются СИНХРОННЫМИ.
 * Функции, выполняющиеся в своем временном потоке называются АСИНХРОННЫМИ (например, через setTimeOut)
 */

// Измерение времени выполнения функции с помощью console.time
console.time("Marker");
setTimeout(() => {
  console.log("Таймер сработал");
  console.timeEnd("Marker");
}, 5000);
// Результат 5006ms из-за того, что в движке JS все процессы встают и выполняются в очереди
