const f = function(x) {
  return x ** 3;
};
/* 
 * параметризация функции executer для вызова функции f
 * чуть ниже вариант записи функции в старом формате
const executer = function (x, y) {
  return x(y);
};
let executor = (x, y) => x(y);
console.log(executer(f, 5));
*/
const executor = x => x(); // Вариант без изменения функции executor через привязывание (bind)
console.log(executor(f.bind(null, 5))); // 125
/* 
null - привязывание контекста, о котором будет выяснено позже, 
вторым параметром (аргументом) передается как раз параметр для первой функции.
Если бы executor не возвращала вызов функции через (), то их нужно было бы добавить в конец функции, например, function.bind(null, 5)(), чтобы вызвать.
Можно укоротить запись, заменив bind на call (вызов). При использовании call, () - не нужно ставить в конце.
*/
